{"version":3,"file":"static/js/534.1c420862.chunk.js","mappings":"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","sources":["components/styles/home.js","components/home/index.js","components/menubar/tweetModal.js","components/profile/like.js","components/profile/comment.js","components/profile/activity.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Tweet = styled.div`\r\n    padding: 15px;\r\n    border-bottom: ${props => `10px solid ${props.border}`} ;\r\n`;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TweetModal from \"../menubar/tweetModal\";\r\nimport Activity from \"../profile/activity\";\r\nimport { Tweet } from \"../styles/home\";\r\nimport { ProfileCorner, Header } from \"../styles/common\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER_URL;\r\nconst Home = () => {\r\n  const userId = useSelector((state) => state.profile.user.id);\r\n  const theme = useSelector((state) => state.theme);\r\n\r\n  return (\r\n    <ProfileCorner border={theme.border}>\r\n      <Header border={theme.border} bg={theme.bg} color={theme.color}>\r\n        <h2>Home</h2>\r\n      </Header>\r\n      <Tweet border={theme.border}>\r\n        <TweetModal rows={3} />\r\n      </Tweet>\r\n      <Activity url={`${URL}/feed?userId=${userId}`} feed />\r\n    </ProfileCorner>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport UploadButton from \"../uploadButton\";\r\nimport { Flex, Button } from \"../styles/modal\";\r\nimport { SET_UPDATE } from \"../../redux/actions\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst TweetModal = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [isTweetDisabled, setIsTweetDisabled] = useState(true);\r\n  const [preview, setPreview] = useState({ image: \"\", video: \"\", media: null });\r\n\r\n  const user = useSelector((state) => state.profile.user);\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const { handleClose, rows } = props;\r\n\r\n  const addTweet = async () => {\r\n    setIsTweetDisabled(true);\r\n    const data = new FormData();\r\n    data.append(\"userId\", user.id);\r\n    data.append(\"text\", text);\r\n    if (preview.media) data.append(\"media\", preview.media);\r\n    if (preview.image || preview.video)\r\n      data.append(\"resource_type\", preview.image ? \"image\" : \"video\");\r\n    const res = await axios.post(`${URL}/tweet/add-tweet`, data);\r\n    setIsTweetDisabled(false);\r\n    setText(\"\");\r\n    setPreview({ image: \"\", video: \"\", media: null });\r\n    toast(\"Your tweet was sent\");\r\n    dispatch({ type: SET_UPDATE });\r\n    handleClose && handleClose();\r\n  };\r\n\r\n  const handlePhoto = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    const isImage = file.type.includes(\"image\");\r\n\r\n    reader.onloadend = () => {\r\n      isImage\r\n        ? setPreview({ image: reader.result, video: \"\", media: file })\r\n        : setPreview({ image: \"\", video: reader.result, media: file });\r\n    };\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Flex bg={theme.bg} color={theme.color}>\r\n        <div>\r\n          <img\r\n            src={user.avatar}\r\n            width=\"49px\"\r\n            height=\"49px\"\r\n            style={{ borderRadius: \"50%\" }}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <textarea\r\n            rows={rows || 5}\r\n            placeholder=\"What's happening?\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n              e.target.value\r\n                ? setIsTweetDisabled(false)\r\n                : setIsTweetDisabled(true);\r\n            }}\r\n          ></textarea>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            {preview.image && (\r\n              <img src={preview.image} style={{ width: \"100%\" }} />\r\n            )}\r\n            {preview.video && (\r\n              <video\r\n                src={preview.video}\r\n                style={{ width: \"100%\" }}\r\n                controls\r\n              ></video>\r\n            )}\r\n          </div>\r\n          <Flex style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}>\r\n            <div>\r\n              <label htmlFor=\"photo\">\r\n                <UploadButton />\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"photo\"\r\n                name=\"photo\"\r\n                accept=\"image/*,video/*\"\r\n                onChange={handlePhoto}\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={addTweet}\r\n                disabled={isTweetDisabled}\r\n                defaultBg={theme.defaultBg}\r\n                darkBg={theme.darkBg}\r\n              >\r\n                Tweet\r\n              </Button>\r\n            </div>\r\n          </Flex>\r\n        </div>\r\n      </Flex>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TweetModal;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Icon from \"../icon\";\r\nimport { Text } from \"../styles/profile\";\r\nimport { ActivityBox, ActivityIcon } from \"../styles/common\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst Like = (props) => {\r\n  const [likeDisabled, setLikeDisabled] = useState(false);\r\n\r\n  const token = useSelector((state) => state.profile.user.token);\r\n\r\n  const { tweets, tweet, idx, updateDetails, myId, getData } = props;\r\n  const likePath = [\r\n    \"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12z\",\r\n  ];\r\n\r\n  const handleLike = async (e, idx) => {\r\n    e.preventDefault();\r\n    setLikeDisabled(true);\r\n    if (tweets[idx].selfLiked) {\r\n      // unlike\r\n      // console.log(\"unlike\");\r\n      try {\r\n        await axios.delete(`${URL}/tweet/like/remove`, {\r\n          data: {\r\n            userId: myId,\r\n            tweetId: tweets[idx][\"Tweets.id\"],\r\n          },\r\n        });\r\n        updateDetails(idx, [\r\n          [\"selfLiked\", false],\r\n          [\"Tweets.likesCount\", tweets[idx][\"Tweets.likesCount\"] - 1],\r\n        ]);\r\n        getData && getData();\r\n        setLikeDisabled(false);\r\n      } catch (err) {\r\n        setLikeDisabled(false);\r\n      }\r\n    } else {\r\n      // like\r\n      // console.log(\"like\");\r\n      try {\r\n        await axios.post(\r\n          `${URL}/tweet/like/add`,\r\n          {\r\n            userId: myId,\r\n            tweetId: tweets[idx][\"Tweets.id\"],\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        updateDetails(idx, [\r\n          [\"selfLiked\", true],\r\n          [\"Tweets.likesCount\", tweets[idx][\"Tweets.likesCount\"] + 1],\r\n        ]);\r\n        setLikeDisabled(false);\r\n      } catch (err) {\r\n        setLikeDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ActivityBox\r\n      onClick={(event) => handleLike(event, idx)}\r\n      disabled={likeDisabled}\r\n      hoverColor=\"rgb(224,36,94)\"\r\n      hoverBg=\"rgba(224,36,94,0.1)\"\r\n    >\r\n      <ActivityIcon>\r\n        <Icon\r\n          d={likePath}\r\n          width=\"18.75px\"\r\n          height=\"18.75px\"\r\n          fill={tweet.selfLiked ? \"rgb(224, 36, 94)\" : \"rgb(101, 119, 134)\"}\r\n        />\r\n      </ActivityIcon>\r\n      <Text color={tweet.selfLiked ? \"rgb(224, 36, 94)\" : \"rgb(101, 119, 134)\"}>\r\n        {tweet[\"Tweets.likesCount\"]}\r\n      </Text>\r\n    </ActivityBox>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React from \"react\";\r\nimport { Text } from \"../styles/profile\";\r\nimport { ActivityBox, ActivityIcon } from \"../styles/common\";\r\nimport Icon from \"../icon\";\r\n\r\nconst commentPath = [\r\n  \"M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z\",\r\n];\r\n\r\nconst Comment = (props) => {\r\n  const { tweets, tweet, idx, updateDetails, myId, getData, onClick } = props;\r\n  return (\r\n    <ActivityBox\r\n      hoverColor=\"rgb(29,161,242)\"\r\n      hoverBg=\"rgba(29,161,242,0.1)\"\r\n      onClick={onClick}\r\n    >\r\n      <ActivityIcon>\r\n        <Icon\r\n          d={commentPath}\r\n          width=\"18.75px\"\r\n          height=\"18.75px\"\r\n          fill=\"rgb(101, 119, 134)\"\r\n        />\r\n      </ActivityIcon>\r\n      <Text color=\"rgb(101, 119, 134)\">{tweet[\"Tweets.commentsCount\"]}</Text>\r\n    </ActivityBox>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Like from \"./like\";\r\nimport Comment from \"./comment\";\r\nimport {\r\n  PeopleFlex,\r\n  TweetDetails,\r\n  EmptyMsg,\r\n  User,\r\n  UserImage,\r\n} from \"../styles/profile\";\r\nimport { isImage, isVideo } from \"../../media\";\r\nimport Loading from \"../loading\";\r\nimport Modal from \"../modal\";\r\nimport CommentModal from \"../tweet/commentModal\";\r\n\r\nconst Activity = (props) => {\r\n  const [tweets, setTweets] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tweetId, setTweetId] = useState(null);\r\n\r\n  const { username } = useParams();\r\n  const user = useSelector((state) => state.profile.user);\r\n  const myId = user.id;\r\n  const refresh = useSelector((state) => state.update.refresh);\r\n  const theme = useSelector((state) => state.theme);\r\n\r\n  const {\r\n    url,\r\n    dataKey,\r\n    header,\r\n    handleHeaderText,\r\n    feed,\r\n    } = props;\r\n\r\n  useEffect(() => {\r\n    // ComponentDidMount\r\n    getData();\r\n  }, [url, refresh]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const res = await axios.get(url);\r\n      setTweets(res.data.tweets);\r\n      handleHeaderText &&\r\n        handleHeaderText(`${res.data.tweets.length} ${header}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const updateDetails = (idx, newState) => {\r\n    setTweets([\r\n      ...tweets.slice(0, idx),\r\n      {\r\n        ...tweets[idx],\r\n        [newState[0][0]]: newState[0][1],\r\n        [newState[1][0]]: newState[1][1],\r\n      },\r\n      ...tweets.slice(idx + 1),\r\n    ]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  if (!tweets) return <Loading />;\r\n    \r\n\r\n  if (!tweets.length)\r\n    return (\r\n      <EmptyMsg>\r\n        {feed\r\n          ? \"You are all caught up!\"\r\n          : `@${username} has no ${dataKey} yet!`}\r\n      </EmptyMsg>\r\n    );\r\n  return (\r\n    <React.Fragment>\r\n      {isModalOpen && (\r\n        <Modal\r\n          children={\r\n            <CommentModal handleClose={handleClose} tweetId={tweetId} />\r\n          }\r\n          handleClose={handleClose}\r\n          padding=\"15px\"\r\n        />\r\n      )}\r\n      {tweets.map((tweet, idx) => {\r\n        const date = new Date(tweet[\"Tweets.createdAt\"]);\r\n        return (\r\n          <React.Fragment>\r\n            <Link\r\n              key={tweet[\"Tweets.id\"]}\r\n              to={`/${tweet.username}/status/${tweet[\"Tweets.id\"]}`}\r\n            >\r\n              <PeopleFlex hover border={theme.border} tweetHov={theme.tweetHov}>\r\n                <User>\r\n                  <UserImage src={tweet.avatar} />\r\n                </User>\r\n                <div style={{ width: \"80%\" }}>\r\n                  <TweetDetails color={theme.color}>\r\n                    {/* <object> to hide nested <a> warning */}\r\n                    <object>\r\n                      <Link to={`/profile/${tweet.username}`}>\r\n                        <h3>\r\n                          {tweet.firstname} {tweet.lastname}\r\n                        </h3>\r\n                      </Link>\r\n                    </object>\r\n                    <p\r\n                      style={{\r\n                        textOverflow: \"ellipsis\",\r\n                        whiteSpace: \"nowrap\",\r\n                        overflow: \"hidden\",\r\n                        maxWidth: \"18%\",\r\n                      }}\r\n                    >\r\n                      @{tweet.username}\r\n                    </p>\r\n                    <span>\r\n                      {date.toLocaleString(\"default\", { month: \"short\" })}{\" \"}\r\n                      {date.getDate()}{\" \"}\r\n                      {new Date().getFullYear() !== date.getFullYear() &&\r\n                        date.getFullYear()}\r\n                    </span>\r\n                  </TweetDetails>\r\n                  <div style={{ color: theme.color, wordBreak: \"break-word\" }}>\r\n                    {tweet[\"Tweets.text\"]}\r\n                  </div>\r\n                  {tweet[\"Tweets.media\"] && isImage(tweet[\"Tweets.media\"]) && (\r\n                    <img\r\n                      src={tweet[\"Tweets.media\"]}\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  )}\r\n                  {tweet[\"Tweets.media\"] && isVideo(tweet[\"Tweets.media\"]) && (\r\n                    <video\r\n                      src={tweet[\"Tweets.media\"]}\r\n                      style={{ width: \"100%\" }}\r\n                      controls\r\n                    ></video>\r\n                  )}\r\n                  <TweetDetails style={{ justifyContent: \"space-between\" }}>\r\n                    <Comment\r\n                      tweets={tweets}\r\n                      tweet={tweet}\r\n                      idx={idx}\r\n                      myId={myId}\r\n                      getData={getData}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setTweetId(tweet[\"Tweets.id\"]);\r\n                        setIsModalOpen(true);\r\n                      }}\r\n                    />\r\n                    <Like\r\n                      tweets={tweets}\r\n                      tweet={tweet}\r\n                      idx={idx}\r\n                      updateDetails={updateDetails}\r\n                      myId={myId}\r\n                      getData={getData}\r\n                    />\r\n                  </TweetDetails>\r\n                </div>\r\n              </PeopleFlex>\r\n            </Link>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Tweet","styled","_templateObject","_taggedTemplateLiteral","props","concat","border","userId","useSelector","state","profile","user","id","theme","_jsxs","ProfileCorner","children","_jsx","Header","bg","color","TweetModal","rows","Activity","url","process","feed","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","isTweetDisabled","setIsTweetDisabled","_useState5","image","video","media","_useState6","preview","setPreview","dispatch","useDispatch","handleClose","addTweet","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","FormData","append","axios","sent","toast","type","SET_UPDATE","stop","apply","arguments","React","Flex","src","avatar","width","height","style","borderRadius","placeholder","value","onChange","e","target","marginBottom","controls","alignItems","justifyContent","htmlFor","UploadButton","name","accept","file","files","reader","FileReader","isImage","includes","onloadend","result","display","Button","onClick","disabled","defaultBg","darkBg","URL","likeDisabled","setLikeDisabled","token","tweets","tweet","idx","updateDetails","myId","getData","handleLike","preventDefault","selfLiked","tweetId","t0","headers","Authorization","t1","_x","_x2","ActivityBox","event","hoverColor","hoverBg","ActivityIcon","Icon","d","fill","Text","commentPath","setTweets","isModalOpen","setIsModalOpen","setTweetId","username","useParams","refresh","update","dataKey","header","handleHeaderText","useEffect","res","length","console","log","newState","_objectSpread2","_toConsumableArray","slice","_objectSpread","_defineProperty","Modal","CommentModal","padding","map","date","Date","Link","to","PeopleFlex","hover","tweetHov","User","UserImage","TweetDetails","firstname","lastname","textOverflow","whiteSpace","overflow","maxWidth","toLocaleString","month","getDate","getFullYear","wordBreak","isVideo","Comment","Like","EmptyMsg","Loading","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}