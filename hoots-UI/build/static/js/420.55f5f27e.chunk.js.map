{"version":3,"file":"static/js/420.55f5f27e.chunk.js","mappings":"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","sources":["components/profileHeader.js","components/styles/tweet.js","components/tweet/comments.js","components/tweet/activity.js","components/tweet/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Icon from \"./icon\";\r\nimport { Header, HeaderWrapper, BackBtn } from \"./styles/profile\";\r\n\r\nconst ProfileHeader = (props) => {\r\n  const { heading, text } = props;\r\n  const theme = useSelector((state) => state.theme);\r\n  const history = useHistory();\r\n  const backIconPaths = [\r\n    \"M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z\",\r\n  ];\r\n  return (\r\n    <HeaderWrapper border={theme.border}>\r\n      <Header bg={theme.bg} color={theme.color}>\r\n        <div>\r\n          <BackBtn onClick={history.goBack}>\r\n            <Icon\r\n              d={backIconPaths}\r\n              width=\"22.5px\"\r\n              height=\"22.5px\"\r\n              fill=\"rgb(29, 161, 242)\"\r\n            />\r\n          </BackBtn>\r\n        </div>\r\n        <div>\r\n          <h2>{heading}</h2>\r\n          {text && <p>{text}</p>}\r\n        </div>\r\n      </Header>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TweetWrapper = styled.div`\r\n  border-bottom: 1px solid rgb(230, 236, 240);\r\n`;\r\n\r\nexport const UserImage = styled.img`\r\n  width: 49px;\r\n  height: 49px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  h3 {\r\n    margin-bottom: 0;\r\n  }\r\n  h3:hover {\r\n    text-decoration: underline;\r\n  }\r\n  p {\r\n    margin-bottom: 0;\r\n    color: rgb(101, 119, 134);\r\n    line-height: 1.13;\r\n  }\r\n`;\r\n\r\nexport const TweetText = styled.div`\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid rgb(230, 236, 240);\r\n  p {\r\n    padding: 5px 0px;\r\n    color: rgb(0, 0, 0);\r\n    font-size: 23px;\r\n    font-weight: 400px;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const ActivityInfo = styled.div`\r\n  display: flex;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid rgb(230, 236, 240);\r\n  a {\r\n    margin-right: 10px;\r\n    font-size: 15px;\r\n  }\r\n  a:hover {\r\n    text-decoration: underline;\r\n    text-decoration-color: rgb(0, 0, 0);\r\n  }\r\n  h4 {\r\n    color: ${(props) => props.color};\r\n    display: inline;\r\n  }\r\n  span {\r\n    color: rgb(101, 119, 134);\r\n  }\r\n`;\r\n\r\nexport const Activity = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding-top: 3%;\r\n  padding-bottom: 3%;\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../loading\";\r\nimport { PeopleFlex, UserImage, TweetDetails } from \"../styles/profile\";\r\nimport { isImage, isVideo } from \"../../media\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst Comments = () => {\r\n  const [comments, setComments] = useState(null);\r\n  const { tweetId } = useParams();\r\n  const refresh = useSelector((state) => state.update.refresh);\r\n  const theme = useSelector((state) => state.theme);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await axios.get(\r\n        `${URL}/tweet/comment/get-comments?tweetId=${tweetId}`\r\n      );\r\n      setComments(res.data.comments);\r\n    })();\r\n  }, [refresh]);\r\n\r\n  if (!comments) return <Loading />;\r\n  return (\r\n    <div>\r\n      {comments.map((comment) => {\r\n        const date = new Date(comment[\"Comments.createdAt\"]);\r\n        return (\r\n          <PeopleFlex hover key={comment[\"Comments.id\"]} border={theme.border}>\r\n            <div>\r\n              <UserImage src={comment.avatar} />\r\n            </div>\r\n            <div style={{ width: \"100%\" }}>\r\n              <TweetDetails color={theme.color}>\r\n                {/* <object> to hide nested <a> warning */}\r\n                <object>\r\n                  <Link to={`/profile/${comment.username}`}>\r\n                    <h3>\r\n                      {comment.firstname} {comment.lastname}\r\n                    </h3>\r\n                  </Link>\r\n                </object>\r\n                <p>@{comment.username}</p>\r\n                <span>\r\n                  {date.toLocaleString(\"default\", { month: \"long\" })}{\" \"}\r\n                  {date.getDate()}{\" \"}\r\n                  {new Date().getFullYear() !== date.getFullYear() &&\r\n                    date.getFullYear()}\r\n                </span>\r\n              </TweetDetails>\r\n              <div style={{color:theme.color}}>{comment[\"Comments.text\"]}</div>\r\n              {comment[\"Comments.media\"] &&\r\n                isImage(comment[\"Comments.media\"]) && (\r\n                  <img\r\n                    src={comment[\"Comments.media\"]}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                )}\r\n              {comment[\"Comments.media\"] &&\r\n                isVideo(comment[\"Comments.media\"]) && (\r\n                  <video\r\n                    src={comment[\"Comments.media\"]}\r\n                    style={{ width: \"100%\" }}\r\n                    controls\r\n                  ></video>\r\n                )}\r\n            </div>\r\n          </PeopleFlex>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport { ActivityBox, ActivityIcon } from \"../styles/common\";\r\nimport Icon from \"../icon\";\r\n\r\nconst Activity = (props) => {\r\n  const { handleClick, hoverColor, hoverBg, path, fill, noPadding } = props;\r\n  return (\r\n    <ActivityBox\r\n      onClick={handleClick}\r\n      hoverColor={hoverColor}\r\n      hoverBg={hoverBg}\r\n      style={{ border: \"none\", background: \"transparent\", outline: \"none\" }}\r\n      noPadding={noPadding}\r\n    >\r\n      <ActivityIcon>\r\n        <Icon d={path} width=\"18.75px\" height=\"18.75px\" fill={fill} />\r\n      </ActivityIcon>\r\n    </ActivityBox>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ProfileHeader from \"../profileHeader\";\r\nimport Icon from \"../icon\";\r\nimport {\r\n  TweetWrapper,\r\n  Flex,\r\n  TweetText,\r\n  ActivityInfo,\r\n  Activity,\r\n  UserImage,\r\n} from \"../styles/tweet\";\r\nimport { ProfileCorner, ActivityBox, ActivityIcon } from \"../styles/common\";\r\nimport { isImage, isVideo } from \"../../media\";\r\nimport Loading from \"../loading\";\r\nimport Modal from \"../modal\";\r\nimport CommentModal from \"./commentModal\";\r\nimport Comments from \"./comments\";\r\nimport TweetActivity from \"./activity\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst Tweet = (props) => {\r\n  const [tweet, setTweet] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const { username, tweetId } = useParams();\r\n\r\n  const user = useSelector((state) => state.profile.user);\r\n  const theme = useSelector((state) => state.theme);\r\n  const myId = user.id;\r\n  const token = user.token;\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await axios.get(\r\n        `${URL}/tweet/get-tweet?username=${username}&tweetId=${tweetId}&myId=${myId}`\r\n      );\r\n      setTweet(res.data.tweet);\r\n    })();\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleActivity = async (self, count, url) => {\r\n    if (tweet[self]) {\r\n      // unlike, unretweet\r\n      try {\r\n        await axios.delete(`${URL}/tweet/${url}/remove`, {\r\n          data: {\r\n            userId: myId,\r\n            tweetId: tweet[\"Tweets.id\"],\r\n          },\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setTweet({\r\n          ...tweet,\r\n          [count]: tweet[count] - 1,\r\n          [self]: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err.response.data);\r\n      }\r\n    } else {\r\n      // like, retweet\r\n      try {\r\n        await axios.post(\r\n          `${URL}/tweet/${url}/add`,\r\n          {\r\n            userId: myId,\r\n            tweetId: tweet[\"Tweets.id\"],\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setTweet({\r\n          ...tweet,\r\n          [count]: tweet[count] + 1,\r\n          [self]: true,\r\n        });\r\n      } catch (err) {\r\n        console.log(err.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!tweet) return <Loading />;\r\n\r\n  const commentPath = [\r\n    \"M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z\",\r\n  ];\r\n  const retweetPath = [\r\n    \"M23.77 15.67c-.292-.293-.767-.293-1.06 0l-2.22 2.22V7.65c0-2.068-1.683-3.75-3.75-3.75h-5.85c-.414 0-.75.336-.75.75s.336.75.75.75h5.85c1.24 0 2.25 1.01 2.25 2.25v10.24l-2.22-2.22c-.293-.293-.768-.293-1.06 0s-.294.768 0 1.06l3.5 3.5c.145.147.337.22.53.22s.383-.072.53-.22l3.5-3.5c.294-.292.294-.767 0-1.06zm-10.66 3.28H7.26c-1.24 0-2.25-1.01-2.25-2.25V6.46l2.22 2.22c.148.147.34.22.532.22s.384-.073.53-.22c.293-.293.293-.768 0-1.06l-3.5-3.5c-.293-.294-.768-.294-1.06 0l-3.5 3.5c-.294.292-.294.767 0 1.06s.767.293 1.06 0l2.22-2.22V16.7c0 2.068 1.683 3.75 3.75 3.75h5.85c.414 0 .75-.336.75-.75s-.337-.75-.75-.75z\",\r\n  ];\r\n  const likePath = [\r\n    \"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12z\",\r\n  ];\r\n\r\n  const date = new Date(tweet[\"Tweets.createdAt\"]);\r\n  return (\r\n    <ProfileCorner border={theme.border}>\r\n      {isModalOpen && (\r\n        <Modal\r\n          children={\r\n            <CommentModal handleClose={handleClose} tweetId={tweetId} />\r\n          }\r\n          handleClose={handleClose}\r\n          padding=\"15px\"\r\n        />\r\n      )}\r\n      <ProfileHeader heading=\"Tweet\" />\r\n      <TweetWrapper>\r\n        <div style={{ padding: \"10px 15px 0px 15px\" }}>\r\n          <Flex>\r\n            <div>\r\n              <UserImage src={tweet.avatar} />\r\n            </div>\r\n            <div>\r\n              <Link to={`/profile/${tweet.username}`}>\r\n                <h3 style={{ color: theme.color }}>\r\n                  {tweet.firstname} {tweet.lastname}\r\n                </h3>\r\n                <p>@{tweet.username}</p>\r\n              </Link>\r\n            </div>\r\n          </Flex>\r\n          <TweetText>\r\n            <p style={{ color: theme.color }}>{tweet[\"Tweets.text\"]}</p>\r\n            {tweet[\"Tweets.media\"] && isImage(tweet[\"Tweets.media\"]) && (\r\n              <img src={tweet[\"Tweets.media\"]} style={{ width: \"100%\" }} />\r\n            )}\r\n            {tweet[\"Tweets.media\"] && isVideo(tweet[\"Tweets.media\"]) && (\r\n              <video\r\n                src={tweet[\"Tweets.media\"]}\r\n                style={{ width: \"100%\" }}\r\n                controls\r\n              ></video>\r\n            )}\r\n            <div style={{ color: theme.para }}>\r\n              {date.toLocaleTimeString(\"en-US\", {\r\n                hour: \"numeric\",\r\n                hour12: true,\r\n                minute: \"numeric\",\r\n              })}{\" \"}\r\n              &middot; {date.toLocaleString(\"default\", { month: \"long\" })}{\" \"}\r\n              {date.getDate()}, {date.getFullYear()}\r\n            </div>\r\n          </TweetText>\r\n          <ActivityInfo color={theme.color}>\r\n            <Link to={`${location.pathname}/retweets`} replace>\r\n              <h4>{tweet[\"Tweets.retweetsCount\"]}</h4> <span>Retweets</span>\r\n            </Link>\r\n            <Link to={`${location.pathname}/likes`} replace>\r\n              <h4>{tweet[\"Tweets.likesCount\"]}</h4> <span>Likes</span>\r\n            </Link>\r\n          </ActivityInfo>\r\n          <Activity>\r\n            <div onClick={() => setIsModalOpen(true)}>\r\n              <ActivityBox\r\n                hoverColor=\"rgb(29,161,242)\"\r\n                hoverBg=\"rgba(29,161,242,0.1)\"\r\n                style={{\r\n                  border: \"none\",\r\n                  background: \"transparent\",\r\n                  outline: \"none\",\r\n                }}\r\n                noPadding={true}\r\n              >\r\n                <ActivityIcon>\r\n                  <Icon\r\n                    d={commentPath}\r\n                    width=\"18.75px\"\r\n                    height=\"18.75px\"\r\n                    fill=\"rgb(101, 119, 134)\"\r\n                  />\r\n                </ActivityIcon>\r\n              </ActivityBox>\r\n            </div>\r\n            <div>\r\n              <TweetActivity\r\n                handleClick={() =>\r\n                  handleActivity(\r\n                    \"selfRetweeted\",\r\n                    \"Tweets.retweetsCount\",\r\n                    \"retweet\"\r\n                  )\r\n                }\r\n                hoverColor=\"rgb(23,191,99)\"\r\n                hoverBg=\"rgba(23,191,99,0.1)\"\r\n                path={retweetPath}\r\n                fill={\r\n                  tweet.selfRetweeted\r\n                    ? \"rgb(23, 191, 99)\"\r\n                    : \"rgb(101, 119, 134)\"\r\n                }\r\n                noPadding={true}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TweetActivity\r\n                handleClick={() =>\r\n                  handleActivity(\"selfLiked\", \"Tweets.likesCount\", \"like\")\r\n                }\r\n                hoverColor=\"rgb(224,36,94)\"\r\n                hoverBg=\"rgba(224,36,94,0.1)\"\r\n                path={likePath}\r\n                fill={\r\n                  tweet.selfLiked ? \"rgb(224, 36, 94)\" : \"rgb(101, 119, 134)\"\r\n                }\r\n                noPadding={true}\r\n              />\r\n            </div>\r\n          </Activity>\r\n        </div>\r\n      </TweetWrapper>\r\n      <Comments />\r\n    </ProfileCorner>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n"],"names":["props","heading","text","theme","useSelector","state","history","useHistory","_jsx","HeaderWrapper","border","children","_jsxs","Header","bg","color","BackBtn","onClick","goBack","Icon","d","width","height","fill","TweetWrapper","styled","_templateObject","_taggedTemplateLiteral","UserImage","_templateObject2","Flex","_templateObject3","TweetText","_templateObject4","ActivityInfo","_templateObject5","Activity","_templateObject6","_useState","useState","_useState2","_slicedToArray","comments","setComments","tweetId","useParams","refresh","update","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","concat","process","sent","data","stop","map","comment","date","Date","PeopleFlex","hover","src","avatar","style","TweetDetails","Link","to","username","firstname","lastname","toLocaleString","month","getDate","getFullYear","isImage","isVideo","controls","Loading","handleClick","hoverColor","hoverBg","path","noPadding","ActivityBox","background","outline","ActivityIcon","URL","tweet","setTweet","_useState3","_useState4","isModalOpen","setIsModalOpen","_useParams","user","profile","myId","id","token","location","useLocation","handleClose","handleActivity","_ref2","_callee2","self","count","url","_objectSpread2","_objectSpread3","_context2","userId","headers","Authorization","_objectSpread","_defineProperty","t0","console","log","response","t1","_x","_x2","_x3","apply","arguments","ProfileCorner","Modal","CommentModal","padding","ProfileHeader","para","toLocaleTimeString","hour","hour12","minute","pathname","replace","TweetActivity","selfRetweeted","selfLiked","Comments"],"sourceRoot":""}